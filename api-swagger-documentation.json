// 20190115170817
// http://localhost:5000/api-docs

{
  "info": {
    "title": "Matchminer API",
    "description": "Documentation of Matchminer's API",
    "termsOfService": "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "contact": {
      "name": "James Lindsay"
    },
    "license": {
      "url": "https://github.com/pyeve/eve-swagger/blob/master/LICENSE",
      "name": "MIT"
    },
    "version": "1.0"
  },
  "paths": {
    "/status": {
      "get": {
        "summary": "Retrieves one or more status",
        "responses": {
          "200": {
            "description": "An array of status",
            "schema": {
              "items": {
                "$ref": "#/definitions/Statu"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Statu"
        ]
      },
      "post": {
        "summary": "Stores one or more status",
        "parameters": [
          {
            "in": "body",
            "name": "Statu",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statu"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Statu"
        ]
      },
      "delete": {
        "summary": "Deletes all status",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Statu"
        ]
      }
    },
    "/status/{statuId}": {
      "get": {
        "summary": "Retrieves a Statu document",
        "responses": {
          "200": {
            "description": "Statu document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Statu"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statu__id"
          }
        ],
        "tags": [
          "Statu"
        ]
      },
      "put": {
        "summary": "Replaces a Statu document",
        "responses": {
          "200": {
            "description": "Statu document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statu__id"
          },
          {
            "in": "body",
            "name": "Statu",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statu"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Statu"
        ]
      },
      "patch": {
        "summary": "Updates a Statu document",
        "responses": {
          "200": {
            "description": "Statu document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statu__id"
          },
          {
            "in": "body",
            "name": "Statu",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statu"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Statu"
        ]
      },
      "delete": {
        "summary": "Deletes a Statu document",
        "responses": {
          "204": {
            "description": "Statu document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statu__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Statu"
        ]
      }
    },
    "/statistics": {
      "get": {
        "summary": "Retrieves one or more statistics",
        "responses": {
          "200": {
            "description": "An array of statistics",
            "schema": {
              "items": {
                "$ref": "#/definitions/Statistic"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Statistic"
        ]
      },
      "post": {
        "summary": "Stores one or more statistics",
        "parameters": [
          {
            "in": "body",
            "name": "Statistic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statistic"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Statistic"
        ]
      },
      "delete": {
        "summary": "Deletes all statistics",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Statistic"
        ]
      }
    },
    "/statistics/{statisticId}": {
      "get": {
        "summary": "Retrieves a Statistic document",
        "responses": {
          "200": {
            "description": "Statistic document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Statistic"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statistic__id"
          }
        ],
        "tags": [
          "Statistic"
        ]
      },
      "put": {
        "summary": "Replaces a Statistic document",
        "responses": {
          "200": {
            "description": "Statistic document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statistic__id"
          },
          {
            "in": "body",
            "name": "Statistic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statistic"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Statistic"
        ]
      },
      "patch": {
        "summary": "Updates a Statistic document",
        "responses": {
          "200": {
            "description": "Statistic document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statistic__id"
          },
          {
            "in": "body",
            "name": "Statistic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statistic"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Statistic"
        ]
      },
      "delete": {
        "summary": "Deletes a Statistic document",
        "responses": {
          "204": {
            "description": "Statistic document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Statistic__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Statistic"
        ]
      }
    },
    "/enrollment": {
      "get": {
        "summary": "Retrieves one or more enrollment",
        "responses": {
          "200": {
            "description": "An array of enrollment",
            "schema": {
              "items": {
                "$ref": "#/definitions/Enrollment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Enrollment"
        ]
      },
      "post": {
        "summary": "Stores one or more enrollment",
        "parameters": [
          {
            "in": "body",
            "name": "Enrollment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enrollment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Enrollment"
        ]
      },
      "delete": {
        "summary": "Deletes all enrollment",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Enrollment"
        ]
      }
    },
    "/enrollment/{enrollmentId}": {
      "get": {
        "summary": "Retrieves a Enrollment document",
        "responses": {
          "200": {
            "description": "Enrollment document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Enrollment"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Enrollment__id"
          }
        ],
        "tags": [
          "Enrollment"
        ]
      }
    },
    "/gi_gold_standard_truth": {
      "get": {
        "summary": "Retrieves one or more gi_gold_standard_truth",
        "responses": {
          "200": {
            "description": "An array of gi_gold_standard_truth",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gi_gold_standard_truth"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Gi_gold_standard_truth"
        ]
      },
      "post": {
        "summary": "Stores one or more gi_gold_standard_truth",
        "parameters": [
          {
            "in": "body",
            "name": "Gi_gold_standard_truth",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gi_gold_standard_truth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Gi_gold_standard_truth"
        ]
      },
      "delete": {
        "summary": "Deletes all gi_gold_standard_truth",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Gi_gold_standard_truth"
        ]
      }
    },
    "/gi_gold_standard_truth/{gi_gold_standard_truthId}": {
      "get": {
        "summary": "Retrieves a Gi_gold_standard_truth document",
        "responses": {
          "200": {
            "description": "Gi_gold_standard_truth document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Gi_gold_standard_truth"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Gi_gold_standard_truth__id"
          }
        ],
        "tags": [
          "Gi_gold_standard_truth"
        ]
      },
      "put": {
        "summary": "Replaces a Gi_gold_standard_truth document",
        "responses": {
          "200": {
            "description": "Gi_gold_standard_truth document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Gi_gold_standard_truth__id"
          },
          {
            "in": "body",
            "name": "Gi_gold_standard_truth",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gi_gold_standard_truth"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Gi_gold_standard_truth"
        ]
      },
      "delete": {
        "summary": "Deletes a Gi_gold_standard_truth document",
        "responses": {
          "204": {
            "description": "Gi_gold_standard_truth document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Gi_gold_standard_truth__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Gi_gold_standard_truth"
        ]
      }
    },
    "/trial_match": {
      "get": {
        "summary": "Retrieves one or more trial_match",
        "responses": {
          "200": {
            "description": "An array of trial_match",
            "schema": {
              "items": {
                "$ref": "#/definitions/Trial_match"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Trial_match"
        ]
      },
      "post": {
        "summary": "Stores one or more trial_match",
        "parameters": [
          {
            "in": "body",
            "name": "Trial_match",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial_match"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Trial_match"
        ]
      },
      "delete": {
        "summary": "Deletes all trial_match",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Trial_match"
        ]
      }
    },
    "/trial_match/{trial_matchId}": {
      "get": {
        "summary": "Retrieves a Trial_match document",
        "responses": {
          "200": {
            "description": "Trial_match document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Trial_match"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Trial_match__id"
          }
        ],
        "tags": [
          "Trial_match"
        ]
      }
    },
    "/patient_view": {
      "get": {
        "summary": "Retrieves one or more patient_view",
        "responses": {
          "200": {
            "description": "An array of patient_view",
            "schema": {
              "items": {
                "$ref": "#/definitions/Patient_view"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Patient_view"
        ]
      },
      "post": {
        "summary": "Stores one or more patient_view",
        "parameters": [
          {
            "in": "body",
            "name": "Patient_view",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Patient_view"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Patient_view"
        ]
      },
      "delete": {
        "summary": "Deletes all patient_view",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Patient_view"
        ]
      }
    },
    "/patient_view/{patient_viewId}": {
      "get": {
        "summary": "Retrieves a Patient_view document",
        "responses": {
          "200": {
            "description": "Patient_view document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Patient_view"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Patient_view__id"
          }
        ],
        "tags": [
          "Patient_view"
        ]
      },
      "put": {
        "summary": "Replaces a Patient_view document",
        "responses": {
          "200": {
            "description": "Patient_view document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Patient_view__id"
          },
          {
            "in": "body",
            "name": "Patient_view",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Patient_view"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Patient_view"
        ]
      }
    },
    "/email": {
      "get": {
        "summary": "Retrieves one or more email",
        "responses": {
          "200": {
            "description": "An array of email",
            "schema": {
              "items": {
                "$ref": "#/definitions/Email"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Email"
        ]
      },
      "post": {
        "summary": "Stores one or more email",
        "parameters": [
          {
            "in": "body",
            "name": "Email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Email"
        ]
      },
      "delete": {
        "summary": "Deletes all email",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Email"
        ]
      }
    },
    "/email/{emailId}": {
      "get": {
        "summary": "Retrieves a Email document",
        "responses": {
          "200": {
            "description": "Email document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Email__id"
          }
        ],
        "tags": [
          "Email"
        ]
      },
      "put": {
        "summary": "Replaces a Email document",
        "responses": {
          "200": {
            "description": "Email document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Email__id"
          },
          {
            "in": "body",
            "name": "Email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Email"
        ]
      },
      "patch": {
        "summary": "Updates a Email document",
        "responses": {
          "200": {
            "description": "Email document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Email__id"
          },
          {
            "in": "body",
            "name": "Email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Email"
        ]
      },
      "delete": {
        "summary": "Deletes a Email document",
        "responses": {
          "204": {
            "description": "Email document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Email__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Email"
        ]
      }
    },
    "/filter": {
      "get": {
        "summary": "Retrieves one or more filter",
        "responses": {
          "200": {
            "description": "An array of filter",
            "schema": {
              "items": {
                "$ref": "#/definitions/Filter"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Filter"
        ]
      },
      "post": {
        "summary": "Stores one or more filter",
        "parameters": [
          {
            "in": "body",
            "name": "Filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Filter"
        ]
      },
      "delete": {
        "summary": "Deletes all filter",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Filter"
        ]
      }
    },
    "/filter/{filterId}": {
      "get": {
        "summary": "Retrieves a Filter document",
        "responses": {
          "200": {
            "description": "Filter document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Filter__id"
          }
        ],
        "tags": [
          "Filter"
        ]
      },
      "put": {
        "summary": "Replaces a Filter document",
        "responses": {
          "200": {
            "description": "Filter document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Filter__id"
          },
          {
            "in": "body",
            "name": "Filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Filter"
        ]
      },
      "patch": {
        "summary": "Updates a Filter document",
        "responses": {
          "200": {
            "description": "Filter document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Filter__id"
          },
          {
            "in": "body",
            "name": "Filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Filter"
        ]
      },
      "delete": {
        "summary": "Deletes a Filter document",
        "responses": {
          "204": {
            "description": "Filter document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Filter__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Filter"
        ]
      }
    },
    "/trial": {
      "get": {
        "summary": "Retrieves one or more trial",
        "responses": {
          "200": {
            "description": "An array of trial",
            "schema": {
              "items": {
                "$ref": "#/definitions/Trial"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Trial"
        ]
      },
      "post": {
        "summary": "Stores one or more trial",
        "parameters": [
          {
            "in": "body",
            "name": "Trial",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Trial"
        ]
      },
      "delete": {
        "summary": "Deletes all trial",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Trial"
        ]
      }
    },
    "/trial/{trialId}": {
      "get": {
        "summary": "Retrieves a Trial document",
        "responses": {
          "200": {
            "description": "Trial document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Trial__id"
          }
        ],
        "tags": [
          "Trial"
        ]
      },
      "put": {
        "summary": "Replaces a Trial document",
        "responses": {
          "200": {
            "description": "Trial document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Trial__id"
          },
          {
            "in": "body",
            "name": "Trial",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Trial"
        ]
      },
      "patch": {
        "summary": "Updates a Trial document",
        "responses": {
          "200": {
            "description": "Trial document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Trial__id"
          },
          {
            "in": "body",
            "name": "Trial",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Trial"
        ]
      },
      "delete": {
        "summary": "Deletes a Trial document",
        "responses": {
          "204": {
            "description": "Trial document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Trial__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Trial"
        ]
      }
    },
    "/clinical": {
      "get": {
        "summary": "Retrieves one or more clinical",
        "responses": {
          "200": {
            "description": "An array of clinical",
            "schema": {
              "items": {
                "$ref": "#/definitions/Clinical"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Clinical"
        ]
      },
      "post": {
        "summary": "Stores one or more clinical",
        "parameters": [
          {
            "in": "body",
            "name": "Clinical",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Clinical"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Clinical"
        ]
      },
      "delete": {
        "summary": "Deletes all clinical",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Clinical"
        ]
      }
    },
    "/clinical/{clinicalId}": {
      "get": {
        "summary": "Retrieves a Clinical document",
        "responses": {
          "200": {
            "description": "Clinical document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Clinical"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Clinical__id"
          }
        ],
        "tags": [
          "Clinical"
        ]
      },
      "put": {
        "summary": "Replaces a Clinical document",
        "responses": {
          "200": {
            "description": "Clinical document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Clinical__id"
          },
          {
            "in": "body",
            "name": "Clinical",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Clinical"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clinical"
        ]
      },
      "patch": {
        "summary": "Updates a Clinical document",
        "responses": {
          "200": {
            "description": "Clinical document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Clinical__id"
          },
          {
            "in": "body",
            "name": "Clinical",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Clinical"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clinical"
        ]
      },
      "delete": {
        "summary": "Deletes a Clinical document",
        "responses": {
          "204": {
            "description": "Clinical document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Clinical__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clinical"
        ]
      }
    },
    "/negative_genomic": {
      "get": {
        "summary": "Retrieves one or more negative_genomic",
        "responses": {
          "200": {
            "description": "An array of negative_genomic",
            "schema": {
              "items": {
                "$ref": "#/definitions/Negative_genomic"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Negative_genomic"
        ]
      },
      "post": {
        "summary": "Stores one or more negative_genomic",
        "parameters": [
          {
            "in": "body",
            "name": "Negative_genomic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Negative_genomic"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Negative_genomic"
        ]
      },
      "delete": {
        "summary": "Deletes all negative_genomic",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Negative_genomic"
        ]
      }
    },
    "/negative_genomic/{negative_genomicId}": {
      "get": {
        "summary": "Retrieves a Negative_genomic document",
        "responses": {
          "200": {
            "description": "Negative_genomic document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Negative_genomic"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Negative_genomic__id"
          }
        ],
        "tags": [
          "Negative_genomic"
        ]
      },
      "put": {
        "summary": "Replaces a Negative_genomic document",
        "responses": {
          "200": {
            "description": "Negative_genomic document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Negative_genomic__id"
          },
          {
            "in": "body",
            "name": "Negative_genomic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Negative_genomic"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Negative_genomic"
        ]
      },
      "delete": {
        "summary": "Deletes a Negative_genomic document",
        "responses": {
          "204": {
            "description": "Negative_genomic document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Negative_genomic__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Negative_genomic"
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "Retrieves one or more user",
        "responses": {
          "200": {
            "description": "An array of user",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "post": {
        "summary": "Stores one or more user",
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Deletes all user",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Retrieves a User document",
        "responses": {
          "200": {
            "description": "User document fetched successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/User__id"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Replaces a User document",
        "responses": {
          "200": {
            "description": "User document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/User__id"
          },
          {
            "in": "body",
            "name": "User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "patch": {
        "summary": "Updates a User document",
        "responses": {
          "200": {
            "description": "User document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/User__id"
          },
          {
            "in": "body",
            "name": "User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Deletes a User document",
        "responses": {
          "204": {
            "description": "User document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/User__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/team": {
      "get": {
        "summary": "Retrieves one or more team",
        "responses": {
          "200": {
            "description": "An array of team",
            "schema": {
              "items": {
                "$ref": "#/definitions/Team"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Team"
        ]
      },
      "post": {
        "summary": "Stores one or more team",
        "parameters": [
          {
            "in": "body",
            "name": "Team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Team"
        ]
      },
      "delete": {
        "summary": "Deletes all team",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Team"
        ]
      }
    },
    "/team/{teamId}": {
      "get": {
        "summary": "Retrieves a Team document",
        "responses": {
          "200": {
            "description": "Team document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Team__id"
          }
        ],
        "tags": [
          "Team"
        ]
      },
      "put": {
        "summary": "Replaces a Team document",
        "responses": {
          "200": {
            "description": "Team document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Team__id"
          },
          {
            "in": "body",
            "name": "Team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Team"
        ]
      },
      "patch": {
        "summary": "Updates a Team document",
        "responses": {
          "200": {
            "description": "Team document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Team__id"
          },
          {
            "in": "body",
            "name": "Team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Team"
        ]
      },
      "delete": {
        "summary": "Deletes a Team document",
        "responses": {
          "204": {
            "description": "Team document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Team__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Team"
        ]
      }
    },
    "/oplog": {
      "get": {
        "summary": "Retrieves one or more oplog",
        "responses": {
          "200": {
            "description": "An array of oplog",
            "schema": {
              "items": {
                "$ref": "#/definitions/Oplog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Oplog"
        ]
      }
    },
    "/oplog/{oplogId}": {
      "get": {
        "summary": "Retrieves a Oplog document",
        "responses": {
          "200": {
            "description": "Oplog document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Oplog"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Oplog__id"
          }
        ],
        "tags": [
          "Oplog"
        ]
      }
    },
    "/genomic": {
      "get": {
        "summary": "Retrieves one or more genomic",
        "responses": {
          "200": {
            "description": "An array of genomic",
            "schema": {
              "items": {
                "$ref": "#/definitions/Genomic"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Genomic"
        ]
      },
      "post": {
        "summary": "Stores one or more genomic",
        "parameters": [
          {
            "in": "body",
            "name": "Genomic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Genomic"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Genomic"
        ]
      },
      "delete": {
        "summary": "Deletes all genomic",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Genomic"
        ]
      }
    },
    "/genomic/{genomicId}": {
      "get": {
        "summary": "Retrieves a Genomic document",
        "responses": {
          "200": {
            "description": "Genomic document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Genomic"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Genomic__id"
          }
        ],
        "tags": [
          "Genomic"
        ]
      },
      "put": {
        "summary": "Replaces a Genomic document",
        "responses": {
          "200": {
            "description": "Genomic document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Genomic__id"
          },
          {
            "in": "body",
            "name": "Genomic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Genomic"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Genomic"
        ]
      },
      "patch": {
        "summary": "Updates a Genomic document",
        "responses": {
          "200": {
            "description": "Genomic document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Genomic__id"
          },
          {
            "in": "body",
            "name": "Genomic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Genomic"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Genomic"
        ]
      },
      "delete": {
        "summary": "Deletes a Genomic document",
        "responses": {
          "204": {
            "description": "Genomic document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Genomic__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Genomic"
        ]
      }
    },
    "/gikb": {
      "get": {
        "summary": "Retrieves one or more gikb",
        "responses": {
          "200": {
            "description": "An array of gikb",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gikb"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Gikb"
        ]
      },
      "post": {
        "summary": "Stores one or more gikb",
        "parameters": [
          {
            "in": "body",
            "name": "Gikb",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gikb"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Gikb"
        ]
      },
      "delete": {
        "summary": "Deletes all gikb",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Gikb"
        ]
      }
    },
    "/gikb/{gikbId}": {
      "get": {
        "summary": "Retrieves a Gikb document",
        "responses": {
          "200": {
            "description": "Gikb document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Gikb"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Gikb__id"
          }
        ],
        "tags": [
          "Gikb"
        ]
      },
      "put": {
        "summary": "Replaces a Gikb document",
        "responses": {
          "200": {
            "description": "Gikb document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Gikb__id"
          },
          {
            "in": "body",
            "name": "Gikb",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gikb"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Gikb"
        ]
      },
      "patch": {
        "summary": "Updates a Gikb document",
        "responses": {
          "200": {
            "description": "Gikb document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Gikb__id"
          },
          {
            "in": "body",
            "name": "Gikb",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gikb"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Gikb"
        ]
      }
    },
    "/hipaa": {
      "get": {
        "summary": "Retrieves one or more hipaa",
        "responses": {
          "200": {
            "description": "An array of hipaa",
            "schema": {
              "items": {
                "$ref": "#/definitions/Hipaa"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Hipaa"
        ]
      },
      "post": {
        "summary": "Stores one or more hipaa",
        "parameters": [
          {
            "in": "body",
            "name": "Hipaa",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hipaa"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Hipaa"
        ]
      },
      "delete": {
        "summary": "Deletes all hipaa",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Hipaa"
        ]
      }
    },
    "/hipaa/{hipaaId}": {
      "get": {
        "summary": "Retrieves a Hipaa document",
        "responses": {
          "200": {
            "description": "Hipaa document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Hipaa"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Hipaa__id"
          }
        ],
        "tags": [
          "Hipaa"
        ]
      },
      "put": {
        "summary": "Replaces a Hipaa document",
        "responses": {
          "200": {
            "description": "Hipaa document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Hipaa__id"
          },
          {
            "in": "body",
            "name": "Hipaa",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hipaa"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Hipaa"
        ]
      },
      "patch": {
        "summary": "Updates a Hipaa document",
        "responses": {
          "200": {
            "description": "Hipaa document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Hipaa__id"
          },
          {
            "in": "body",
            "name": "Hipaa",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hipaa"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Hipaa"
        ]
      },
      "delete": {
        "summary": "Deletes a Hipaa document",
        "responses": {
          "204": {
            "description": "Hipaa document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Hipaa__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Hipaa"
        ]
      }
    },
    "/response": {
      "get": {
        "summary": "Retrieves one or more response",
        "responses": {
          "200": {
            "description": "An array of response",
            "schema": {
              "items": {
                "$ref": "#/definitions/Response"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Response"
        ]
      },
      "post": {
        "summary": "Stores one or more response",
        "parameters": [
          {
            "in": "body",
            "name": "Response",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Response"
        ]
      },
      "delete": {
        "summary": "Deletes all response",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Response"
        ]
      }
    },
    "/response/{responseId}": {
      "get": {
        "summary": "Retrieves a Response document",
        "responses": {
          "200": {
            "description": "Response document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Response__id"
          }
        ],
        "tags": [
          "Response"
        ]
      },
      "put": {
        "summary": "Replaces a Response document",
        "responses": {
          "200": {
            "description": "Response document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Response__id"
          },
          {
            "in": "body",
            "name": "Response",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Response"
        ]
      },
      "patch": {
        "summary": "Updates a Response document",
        "responses": {
          "200": {
            "description": "Response document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Response__id"
          },
          {
            "in": "body",
            "name": "Response",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Response"
        ]
      },
      "delete": {
        "summary": "Deletes a Response document",
        "responses": {
          "204": {
            "description": "Response document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Response__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Response"
        ]
      }
    },
    "/match": {
      "get": {
        "summary": "Retrieves one or more match",
        "responses": {
          "200": {
            "description": "An array of match",
            "schema": {
              "items": {
                "$ref": "#/definitions/Match"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Match"
        ]
      },
      "post": {
        "summary": "Stores one or more match",
        "parameters": [
          {
            "in": "body",
            "name": "Match",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Match"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Match"
        ]
      },
      "delete": {
        "summary": "Deletes all match",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Match"
        ]
      }
    },
    "/match/{matchId}": {
      "get": {
        "summary": "Retrieves a Match document",
        "responses": {
          "200": {
            "description": "Match document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Match"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Match__id"
          }
        ],
        "tags": [
          "Match"
        ]
      },
      "put": {
        "summary": "Replaces a Match document",
        "responses": {
          "200": {
            "description": "Match document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Match__id"
          },
          {
            "in": "body",
            "name": "Match",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Match"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Match"
        ]
      },
      "patch": {
        "summary": "Updates a Match document",
        "responses": {
          "200": {
            "description": "Match document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Match__id"
          },
          {
            "in": "body",
            "name": "Match",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Match"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Match"
        ]
      },
      "delete": {
        "summary": "Deletes a Match document",
        "responses": {
          "204": {
            "description": "Match document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Match__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Match"
        ]
      }
    },
    "/public_stats": {
      "get": {
        "summary": "Retrieves one or more public_stats",
        "responses": {
          "200": {
            "description": "An array of public_stats",
            "schema": {
              "items": {
                "$ref": "#/definitions/Public_stat"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Public_stat"
        ]
      },
      "post": {
        "summary": "Stores one or more public_stats",
        "parameters": [
          {
            "in": "body",
            "name": "Public_stat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Public_stat"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Public_stat"
        ]
      },
      "delete": {
        "summary": "Deletes all public_stats",
        "responses": {
          "204": {
            "description": "operation has been successful"
          }
        },
        "tags": [
          "Public_stat"
        ]
      }
    },
    "/public_stats/{public_statId}": {
      "get": {
        "summary": "Retrieves a Public_stat document",
        "responses": {
          "200": {
            "description": "Public_stat document fetched successfully",
            "schema": {
              "$ref": "#/definitions/Public_stat"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Public_stat__id"
          }
        ],
        "tags": [
          "Public_stat"
        ]
      },
      "put": {
        "summary": "Replaces a Public_stat document",
        "responses": {
          "200": {
            "description": "Public_stat document replaced successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Public_stat__id"
          },
          {
            "in": "body",
            "name": "Public_stat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Public_stat"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Public_stat"
        ]
      },
      "patch": {
        "summary": "Updates a Public_stat document",
        "responses": {
          "200": {
            "description": "Public_stat document updated successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Public_stat__id"
          },
          {
            "in": "body",
            "name": "Public_stat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Public_stat"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Public_stat"
        ]
      },
      "delete": {
        "summary": "Deletes a Public_stat document",
        "responses": {
          "204": {
            "description": "Public_stat document deleted successfully"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/Public_stat__id"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Current value of the _etag field",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Public_stat"
        ]
      }
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "parameters": {
    "Statu__id": {
      "in": "path",
      "name": "statuId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Statistic__id": {
      "in": "path",
      "name": "statisticId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Enrollment__id": {
      "in": "path",
      "name": "enrollmentId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Gi_gold_standard_truth__id": {
      "in": "path",
      "name": "gi_gold_standard_truthId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Trial_match__id": {
      "in": "path",
      "name": "trial_matchId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Patient_view__id": {
      "in": "path",
      "name": "patient_viewId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Email__id": {
      "in": "path",
      "name": "emailId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Filter__id": {
      "in": "path",
      "name": "filterId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Trial__id": {
      "in": "path",
      "name": "trialId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Clinical__id": {
      "in": "path",
      "name": "clinicalId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Negative_genomic__id": {
      "in": "path",
      "name": "negative_genomicId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "User__id": {
      "in": "path",
      "name": "userId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Team__id": {
      "in": "path",
      "name": "teamId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Oplog__id": {
      "in": "path",
      "name": "oplogId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Genomic__id": {
      "in": "path",
      "name": "genomicId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Gikb__id": {
      "in": "path",
      "name": "gikbId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Hipaa__id": {
      "in": "path",
      "name": "hipaaId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Response__id": {
      "in": "path",
      "name": "responseId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Match__id": {
      "in": "path",
      "name": "matchId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    },
    "Public_stat__id": {
      "in": "path",
      "name": "public_statId",
      "required": true,
      "description": "",
      "type": "string",
      "format": "objectid"
    }
  },
  "produces": [
    "application/json"
  ],
  "basePath": "/api",
  "tags": [
    {
      "name": "Statu"
    },
    {
      "name": "Statistic"
    },
    {
      "name": "Enrollment"
    },
    {
      "name": "Gi_gold_standard_truth"
    },
    {
      "name": "Trial_match"
    },
    {
      "name": "Patient_view"
    },
    {
      "name": "Email"
    },
    {
      "name": "Filter"
    },
    {
      "name": "Trial"
    },
    {
      "name": "Clinical"
    },
    {
      "name": "Negative_genomic"
    },
    {
      "name": "User"
    },
    {
      "name": "Team"
    },
    {
      "name": "Oplog"
    },
    {
      "name": "Genomic"
    },
    {
      "name": "Gikb"
    },
    {
      "name": "Hipaa"
    },
    {
      "name": "Response"
    },
    {
      "name": "Match"
    },
    {
      "name": "Public_stat"
    }
  ],
  "host": "localhost:5000",
  "definitions": {
    "Statu": {
      "required": [
        "updated_genomic",
        "new_genomic",
        "silent",
        "new_clinical",
        "last_update",
        "data_push_id",
        "updated_clinical"
      ],
      "type": "object",
      "properties": {
        "updated_genomic": {
          "type": "integer"
        },
        "new_genomic": {
          "type": "integer"
        },
        "updated_clinical": {
          "type": "integer"
        },
        "silent": {
          "type": "boolean"
        },
        "backup_path": {
          "readOnly": true,
          "type": "string"
        },
        "new_clinical": {
          "type": "integer"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        },
        "data_push_id": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        }
      }
    },
    "Statistic": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "objectid"
        }
      }
    },
    "Enrollment": {
      "required": [
        "mrn",
        "protocol_no"
      ],
      "type": "object",
      "properties": {
        "requires_manual_review": {
          "default": false,
          "type": "boolean"
        },
        "consent_date": {
          "type": "string",
          "format": "date-time"
        },
        "user_user_name": {
          "type": "string"
        },
        "user_first_name": {
          "type": "string"
        },
        "onstudy_date": {
          "type": "string",
          "format": "date-time"
        },
        "user_last_name": {
          "type": "string"
        },
        "mrn": {
          "type": "string"
        },
        "filter_protocol_no": {
          "type": "string"
        },
        "has_onstudy_date": {
          "default": true,
          "type": "boolean"
        },
        "protocol_no": {
          "type": "string"
        },
        "filter_label": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "ontreatment_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Gi_gold_standard_truth": {
      "required": [
        "tier4_trial_matches",
        "block_number",
        "mmr_status",
        "review_date",
        "num_actionable_cnvs",
        "sig_fda_therapies",
        "oncologist",
        "alterations",
        "num_tier4_variants",
        "report_date",
        "num_actionable_cnv_regions",
        "sig_offlabel_therapies",
        "sample_id",
        "actionable_trial_matches",
        "num_tier1_variants",
        "num_cnvs",
        "sv_fda_therapies",
        "num_investigational_cnvs",
        "panel_version",
        "clinical_id",
        "pdf_layout_version",
        "num_cnv_regions",
        "all_profile_percentile",
        "patient_name",
        "pole_status",
        "tmb",
        "biopsy_site",
        "mean_sample_coverage",
        "reviewers",
        "mutation_df",
        "qc_result",
        "num_tumor_type_oncopanel",
        "mrn",
        "mutation_trial_matches",
        "tumor_purity_per",
        "sv_offlabel_therapies",
        "num_tier2_variants",
        "report_version",
        "cnv_df",
        "num_investigational_cnv_regions",
        "patient_initials",
        "physician",
        "sig_trial_matches",
        "tumor_type_meta",
        "cnv_trial_matches",
        "num_tier3_variants",
        "tumor_type_percentile",
        "num_oncopanel",
        "tumor_type",
        "disease_center",
        "biopsy_site_type"
      ],
      "type": "object",
      "properties": {
        "tier4_trial_matches": {
          "items": {

          },
          "type": "array"
        },
        "block_number": {
          "type": "string"
        },
        "gi_report_date": {
          "type": "string"
        },
        "review_date": {
          "type": "string"
        },
        "num_actionable_cnvs": {
          "type": "integer"
        },
        "sig_fda_therapies": {
          "items": {

          },
          "type": "array"
        },
        "oncologist": {
          "type": "string"
        },
        "alterations": {

        },
        "num_tier4_variants": {
          "type": "integer"
        },
        "report_date": {
          "type": "string"
        },
        "num_actionable_cnv_regions": {
          "type": "integer"
        },
        "sig_offlabel_therapies": {
          "items": {

          },
          "type": "array"
        },
        "sample_id": {
          "type": "string"
        },
        "actionable_trial_matches": {
          "items": {

          },
          "type": "array"
        },
        "patient_name": {
          "type": "string"
        },
        "is_unreviewed": {
          "type": "boolean"
        },
        "sv_fda_therapies": {
          "items": {

          },
          "type": "array"
        },
        "num_investigational_cnvs": {
          "type": "integer"
        },
        "panel_version": {
          "type": "integer"
        },
        "biopsy_site_type": {
          "type": "string"
        },
        "clinical_id": {
          "type": "string"
        },
        "pdf_layout_version": {
          "type": "integer"
        },
        "display_caveat": {
          "type": "boolean"
        },
        "all_profile_percentile": {
          "type": "integer"
        },
        "num_tier1_variants": {
          "type": "integer"
        },
        "pole_status": {
          "type": "string"
        },
        "tmb": {
          "type": "number",
          "format": "float"
        },
        "biopsy_site": {
          "type": "string"
        },
        "num_cnvs": {
          "type": "integer"
        },
        "reviewers": {
          "type": "string"
        },
        "mutation_df": {

        },
        "qc_result": {
          "type": "string"
        },
        "mean_sample_coverage": {
          "type": "integer"
        },
        "num_cnv_regions": {
          "type": "integer"
        },
        "mutation_trial_matches": {

        },
        "tumor_purity_per": {
          "type": "number",
          "format": "float"
        },
        "sv_offlabel_therapies": {
          "items": {

          },
          "type": "array"
        },
        "num_tier2_variants": {
          "type": "integer"
        },
        "filename": {
          "type": "string"
        },
        "report_version": {
          "type": "integer"
        },
        "cnv_df": {

        },
        "tumor_type": {
          "type": "string"
        },
        "num_investigational_cnv_regions": {
          "type": "integer"
        },
        "patient_initials": {
          "type": "string"
        },
        "physician": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "sig_trial_matches": {
          "items": {

          },
          "type": "array"
        },
        "sv_gene": {

        },
        "tumor_type_meta": {
          "type": "string"
        },
        "cnv_trial_matches": {

        },
        "mmr_status": {
          "type": "string"
        },
        "num_tier3_variants": {
          "type": "integer"
        },
        "sv_comment": {
          "type": "string"
        },
        "summary": {

        },
        "mrn": {
          "type": "string"
        },
        "tumor_type_percentile": {
          "type": "integer"
        },
        "num_tumor_type_oncopanel": {
          "type": "integer"
        },
        "disease_center": {
          "type": "string"
        },
        "num_oncopanel": {
          "type": "integer"
        }
      }
    },
    "Trial_match": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "match_type": {
          "enum": [
            "variant",
            "gene"
          ],
          "type": "string"
        },
        "internal_id": {
          "type": "string"
        },
        "vital_status": {
          "enum": [
            "alive",
            "deceased"
          ],
          "type": "string"
        },
        "true_cdna_change": {
          "type": "string"
        },
        "report_date": {
          "type": "string",
          "format": "date-time"
        },
        "sort_order": {
          "type": "integer"
        },
        "sample_id": {
          "type": "string"
        },
        "genomic_id": {
          "type": "string"
        },
        "chromosome": {
          "type": "string"
        },
        "oncotree_primary_diagnosis_name": {
          "type": "string"
        },
        "clinical_id": {
          "type": "string"
        },
        "true_variant_classification": {
          "type": "string"
        },
        "ord_physician_name": {
          "type": "string"
        },
        "ord_physician_email": {
          "type": "string"
        },
        "variant_category": {
          "enum": [
            "MUTATION",
            "CNV",
            "SV"
          ],
          "type": "string"
        },
        "protocol_no": {
          "type": "string"
        },
        "wildtype": {
          "type": "boolean"
        },
        "canonical_strand": {
          "type": "string"
        },
        "trial_accrual_status": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "true_hugo_symbol": {
          "type": "string"
        },
        "first_last": {
          "type": "string"
        },
        "match_level": {
          "enum": [
            "step",
            "arm",
            "dose"
          ],
          "type": "string"
        },
        "tier": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "allele_fraction": {
          "type": "number",
          "format": "float"
        },
        "genomic_alteration": {
          "readOnly": true,
          "type": "string"
        },
        "reference_allele": {
          "type": "string"
        },
        "mrn": {
          "type": "string"
        },
        "true_protein_change": {
          "type": "string"
        },
        "true_transcript_exon": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "cnv_call": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        }
      }
    },
    "Patient_view": {
      "type": "object",
      "properties": {
        "num_views_match_list": {
          "readOnly": true,
          "type": "integer"
        },
        "requires_manual_review": {
          "default": false,
          "type": "boolean"
        },
        "user_id": {
          "$ref": "#/definitions/User__id"
        },
        "filter_protocol_no": {
          "type": "string"
        },
        "user_user_name": {
          "readOnly": true,
          "type": "string"
        },
        "user_first_name": {
          "readOnly": true,
          "type": "string"
        },
        "user_last_name": {
          "readOnly": true,
          "type": "string"
        },
        "mrn": {
          "type": "string"
        },
        "view_date": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "num_views_details_list": {
          "readOnly": true,
          "type": "integer"
        },
        "protocol_no": {
          "type": "string"
        },
        "filter_label": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "user_email": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Email": {
      "required": [
        "body",
        "email_to",
        "email_from",
        "subject"
      ],
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "errors": {
          "default": [

          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cc": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "email_to": {
          "type": "string"
        },
        "num_failures": {
          "default": 0,
          "type": "integer"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "email_from": {
          "type": "string"
        },
        "sent": {
          "default": false,
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "Filter": {
      "required": [
        "status",
        "USER_ID",
        "TEAM_ID",
        "temporary"
      ],
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "num_genomic": {
          "type": "integer"
        },
        "num_pairs": {
          "type": "integer"
        },
        "USER_ID": {
          "type": "string",
          "format": "objectid"
        },
        "description": {
          "readOnly": true,
          "type": "string"
        },
        "protocol_id": {
          "type": "string"
        },
        "enrollment": {
          "type": "object",
          "properties": {
            "y_axis": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "x_axis": {
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "type": "array"
            }
          }
        },
        "temporary": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "num_genomic_samples": {
          "type": "integer"
        },
        "badgeTextColor": {
          "type": "string"
        },
        "TEAM_ID": {
          "type": "string",
          "format": "objectid"
        },
        "clinical_filter": {
          "type": "object",
          "properties": {

          }
        },
        "num_clinical": {
          "type": "integer"
        },
        "filter_hash": {
          "type": "string"
        },
        "num_samples": {
          "type": "integer"
        },
        "badgeColor": {
          "type": "string"
        },
        "_id": {
          "$ref": "#/definitions/Filter__id"
        },
        "genomic_filter": {
          "type": "object",
          "properties": {

          }
        },
        "num_matches": {
          "type": "integer"
        }
      }
    },
    "Trial": {
      "required": [
        "oncology_group_list",
        "sponsor_list",
        "nct_id",
        "data_table4",
        "protocol_no",
        "staff_list",
        "cancer_center_accrual_goal_upper",
        "protocol_target_accrual",
        "site_list",
        "phase",
        "long_title",
        "management_group_list",
        "protocol_type",
        "program_area_list",
        "treatment_list",
        "principal_investigator",
        "protocol_id",
        "short_title",
        "age"
      ],
      "type": "object",
      "properties": {
        "drug_list": {
          "type": "object",
          "properties": {
            "drug": {
              "items": {
                "type": "object",
                "properties": {
                  "drug_name": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "last_updated": {
          "default": "",
          "type": "string"
        },
        "nct_purpose": {
          "type": "string"
        },
        "oncology_group_list": {
          "required": [
            "oncology_group"
          ],
          "type": "object",
          "properties": {
            "oncology_group": {
              "items": {
                "required": [
                  "is_primary",
                  "group_name"
                ],
                "type": "object",
                "properties": {
                  "is_primary": {
                    "type": "string"
                  },
                  "group_name": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "lead_study_coordinator": {
          "type": "string"
        },
        "lead_study_coordinator_email": {
          "type": "string"
        },
        "coordinating_center": {
          "type": "string"
        },
        "prior_treatment_requirements": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sponsor_list": {
          "required": [
            "sponsor"
          ],
          "type": "object",
          "properties": {
            "sponsor": {
              "items": {
                "required": [
                  "is_principal_sponsor",
                  "sponsor_roles",
                  "sponsor_name",
                  "sponsor_protocol_no"
                ],
                "type": "object",
                "properties": {
                  "is_principal_sponsor": {
                    "type": "string"
                  },
                  "sponsor_roles": {
                    "type": "string"
                  },
                  "sponsor_name": {
                    "type": "string"
                  },
                  "sponsor_protocol_no": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "nct_id": {
          "type": "string"
        },
        "data_table4": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "curated_on": {
          "default": "",
          "type": "string"
        },
        "staff_list": {
          "required": [
            "protocol_staff"
          ],
          "type": "object",
          "properties": {
            "protocol_staff": {
              "items": {
                "required": [
                  "first_name",
                  "last_name",
                  "middle_name",
                  "stop_date",
                  "institution_name",
                  "staff_role",
                  "npi",
                  "start_date"
                ],
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "middle_name": {
                    "type": "string"
                  },
                  "stop_date": {
                    "type": "integer"
                  },
                  "institution_name": {
                    "type": "string"
                  },
                  "phone_no": {
                    "type": "string"
                  },
                  "staff_role": {
                    "type": "string"
                  },
                  "npi": {
                    "type": "string"
                  },
                  "email_address": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "integer"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "cancer_center_accrual_goal_upper": {
          "type": "integer"
        },
        "protocol_target_accrual": {
          "type": "integer"
        },
        "match": {
          "items": {

          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "_summary": {
          "type": "object"
        },
        "site_list": {
          "required": [
            "site"
          ],
          "type": "object",
          "properties": {
            "site": {
              "items": {
                "required": [
                  "site_status",
                  "uses_cancer_center_irb",
                  "site_name",
                  "coordinating_center"
                ],
                "type": "object",
                "properties": {
                  "site_status": {
                    "type": "string"
                  },
                  "uses_cancer_center_irb": {
                    "type": "string"
                  },
                  "site_name": {
                    "type": "string"
                  },
                  "coordinating_center": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "principal_investigator_institution": {
          "type": "string"
        },
        "primary_study_contact": {
          "type": "string"
        },
        "nct_link": {
          "type": "string"
        },
        "cancer_center_current_accrual": {
          "default": 0,
          "type": "integer"
        },
        "protocol_no": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "oncpro_link": {
          "type": "string"
        },
        "long_title": {
          "type": "string"
        },
        "management_group_list": {
          "required": [
            "management_group"
          ],
          "type": "object",
          "properties": {
            "management_group": {
              "items": {
                "required": [
                  "is_primary",
                  "management_group_name"
                ],
                "type": "object",
                "properties": {
                  "is_primary": {
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "type": "string"
                  },
                  "management_group_name": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "protocol_type": {
          "type": "string"
        },
        "stage": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "program_area_list": {
          "required": [
            "program_area"
          ],
          "type": "object",
          "properties": {
            "program_area": {
              "items": {
                "required": [
                  "program_area_name"
                ],
                "type": "object",
                "properties": {
                  "is_primary": {
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "type": "string"
                  },
                  "program_area_name": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "treatment_list": {
          "required": [
            "step"
          ],
          "type": "object",
          "properties": {
            "step": {
              "items": {
                "required": [
                  "step_internal_id",
                  "step_code",
                  "step_type"
                ],
                "type": "object",
                "properties": {
                  "step_internal_id": {
                    "type": "integer"
                  },
                  "step_code": {
                    "type": "string"
                  },
                  "step_type": {
                    "type": "string"
                  },
                  "arm": {
                    "items": {
                      "required": [
                        "arm_code",
                        "arm_suspended",
                        "arm_internal_id",
                        "arm_description"
                      ],
                      "type": "object",
                      "properties": {
                        "arm_code": {
                          "type": "string"
                        },
                        "dose_level": {
                          "items": {
                            "required": [
                              "level_code",
                              "level_internal_id",
                              "level_description",
                              "level_suspended"
                            ],
                            "type": "object",
                            "properties": {
                              "level_description": {
                                "type": "string"
                              },
                              "level_suspended": {
                                "type": "string"
                              },
                              "level_code": {
                                "type": "string"
                              },
                              "match": {
                                "items": {

                                },
                                "type": "array"
                              },
                              "level_internal_id": {
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "match": {
                          "items": {

                          },
                          "type": "array"
                        },
                        "arm_suspended": {
                          "type": "string"
                        },
                        "arm_internal_id": {
                          "type": "integer"
                        },
                        "arm_description": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "match": {
                    "items": {

                    },
                    "type": "array"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "principal_investigator": {
          "type": "string"
        },
        "disease_site_list": {
          "required": [
            "disease_site"
          ],
          "type": "object",
          "properties": {
            "disease_site": {
              "items": {
                "required": [
                  "disease_site_name",
                  "disease_site_code"
                ],
                "type": "object",
                "properties": {
                  "disease_site_name": {
                    "type": "string"
                  },
                  "disease_site_code": {
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "protocol_id": {
          "type": "integer"
        },
        "short_title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "management_group_primary": {
          "type": "string"
        },
        "primary_study_contact_email": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "Clinical": {
      "required": [
        "PCT_TARGET_BASE",
        "LAST_NAME",
        "TUMOR_PURITY_PERCENT",
        "ONCOTREE_PRIMARY_DIAGNOSIS",
        "ORD_PHYSICIAN_NAME",
        "FIRST_NAME",
        "CRIS_YN",
        "BIRTH_DATE",
        "QUESTION4_YN",
        "TOTAL_READS",
        "QUESTION3_YN",
        "ONCOTREE_PRIMARY_DIAGNOSIS_NAME",
        "PANEL_VERSION",
        "TOTAL_ALIGNED_READS",
        "GENDER",
        "TEST_TYPE",
        "QUESTION5_YN",
        "REPORT_DATE",
        "MEAN_SAMPLE_COVERAGE",
        "VITAL_STATUS",
        "QUESTION1_YN",
        "REPORT_COMMENT",
        "ORD_PHYSICIAN_NPI",
        "DISEASE_CENTER_DESCR",
        "MRN",
        "DATE_RECEIVED_AT_SEQ_CENTER",
        "ORD_PHYSICIAN_EMAIL",
        "BLOCK_NUMBER",
        "QUESTION2_YN",
        "REPORT_VERSION",
        "PATHOLOGIST_NAME",
        "QC_RESULT"
      ],
      "type": "object",
      "properties": {
        "TUMOR_MUTATIONAL_BURDEN_PER_MEGABASE": {
          "type": "number",
          "format": "float"
        },
        "PCT_TARGET_BASE": {
          "type": "number",
          "format": "float"
        },
        "LAST_NAME": {
          "type": "string"
        },
        "TUMOR_PURITY_PERCENT": {
          "type": "number",
          "format": "float"
        },
        "ONCOTREE_PRIMARY_DIAGNOSIS": {
          "type": "string"
        },
        "ONCOTREE_BIOPSY_SITE": {
          "type": "string"
        },
        "MMR_STATUS": {
          "enum": [
            "Cannot assess",
            "Indeterminate (see note)",
            "Proficient (MMR-P / MSS)",
            "Deficient (MMR-D / MSI-H)"
          ],
          "type": "string"
        },
        "FIRST_NAME": {
          "type": "string"
        },
        "PATIENT_ID": {
          "type": "string"
        },
        "CRIS_YN": {
          "type": "string"
        },
        "METAMAIN_COUNT": {
          "type": "integer"
        },
        "CNV_RESULTS": {
          "type": "string"
        },
        "QUESTION4_YN": {
          "type": "string"
        },
        "SAMPLE_ID": {
          "type": "string"
        },
        "ALL_PROFILE_PERCENTILE": {
          "type": "number",
          "format": "float"
        },
        "TOTAL_READS": {
          "type": "integer"
        },
        "ORD_PHYSICIAN_EMAIL": {
          "type": "string"
        },
        "QUESTION3_YN": {
          "type": "string"
        },
        "ONCOTREE_PRIMARY_DIAGNOSIS_NAME": {
          "type": "string"
        },
        "PANEL_VERSION": {
          "type": "integer"
        },
        "ONCOTREE_PRIMARY_DIAGNOSIS_META": {
          "type": "string"
        },
        "REPORT_COMMENT": {
          "type": "string"
        },
        "GENDER": {
          "type": "string"
        },
        "TEST_TYPE": {
          "type": "string"
        },
        "ORD_PHYSICIAN_NAME": {
          "type": "string"
        },
        "QUESTION5_YN": {
          "type": "string"
        },
        "ONCOTREE_BIOPSY_SITE_META": {
          "type": "string"
        },
        "ONCOTREE_BIOPSY_SITE_COLOR": {
          "type": "string"
        },
        "MEAN_SAMPLE_COVERAGE": {
          "type": "integer"
        },
        "VITAL_STATUS": {
          "enum": [
            "alive",
            "deceased"
          ],
          "type": "string"
        },
        "ONCOTREE_BIOPSY_SITE_NAME": {
          "type": "string"
        },
        "LAST_VISIT_DATE": {
          "type": "string",
          "format": "date-time"
        },
        "QUESTION1_YN": {
          "type": "string"
        },
        "TOTAL_ALIGNED_READS": {
          "type": "integer"
        },
        "BLOCK_NUMBER": {
          "type": "string"
        },
        "ENROLLED": {
          "items": {
            "type": "string",
            "format": "objectid"
          },
          "readOnly": true,
          "type": "array"
        },
        "ONCOTREE_PRIMARY_DIAGNOSIS_COLOR": {
          "type": "string"
        },
        "ORD_PHYSICIAN_NPI": {
          "type": "integer"
        },
        "DISEASE_CENTER_DESCR": {
          "type": "string"
        },
        "REPORT_DATE": {
          "type": "string",
          "format": "date-time"
        },
        "DATE_RECEIVED_AT_SEQ_CENTER": {
          "type": "string",
          "format": "date-time"
        },
        "data_push_id": {
          "type": "string"
        },
        "BIRTH_DATE": {
          "type": "string",
          "format": "date-time"
        },
        "POWERPATH_PATIENT_ID": {
          "type": "string"
        },
        "CANCER_TYPE_PERCENTILE": {
          "type": "number",
          "format": "float"
        },
        "PDF_LAYOUT_VERSION": {
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "ALT_MRN": {
          "type": "string"
        },
        "FIRST_LAST": {
          "readOnly": true,
          "type": "string"
        },
        "MRN": {
          "type": "string"
        },
        "FILTER": {
          "items": {
            "type": "string",
            "format": "objectid"
          },
          "readOnly": true,
          "type": "array"
        },
        "CONSENT_17000": {
          "type": "string"
        },
        "SNV_RESULTS": {
          "type": "string"
        },
        "QUESTION2_YN": {
          "type": "string"
        },
        "REPORT_VERSION": {
          "type": "integer"
        },
        "ONCOTREE_BIOPSY_SITE_TYPE": {
          "type": "string"
        },
        "LAST_FIRST": {
          "readOnly": true,
          "type": "string"
        },
        "PATHOLOGIST_NAME": {
          "type": "string"
        },
        "CASE_COUNT": {
          "type": "integer"
        },
        "_id": {
          "$ref": "#/definitions/Clinical__id"
        },
        "QC_RESULT": {
          "type": "string"
        }
      }
    },
    "Negative_genomic": {
      "required": [
        "clinical_id",
        "true_hugo_symbol",
        "coverage_type",
        "coverage",
        "sample_id",
        "roi_type",
        "panel"
      ],
      "type": "object",
      "properties": {
        "entire_gene": {
          "readOnly": true,
          "type": "boolean"
        },
        "clinical_id": {
          "$ref": "#/definitions/Clinical__id"
        },
        "true_codon": {
          "type": "integer"
        },
        "true_hugo_symbol": {
          "type": "string"
        },
        "show_codon": {
          "readOnly": true,
          "type": "boolean"
        },
        "coverage_type": {
          "enum": [
            "PN",
            "PLC",
            "NPLC"
          ],
          "type": "string"
        },
        "coverage": {
          "type": "number",
          "format": "float"
        },
        "sample_id": {
          "type": "string"
        },
        "true_transcript_exon": {
          "type": "integer"
        },
        "roi_type": {
          "enum": [
            "C",
            "R",
            "M",
            "G",
            "E"
          ],
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "panel": {
          "type": "string"
        },
        "show_exon": {
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "User": {
      "required": [
        "first_name",
        "last_name",
        "roles",
        "title",
        "teams",
        "user_name",
        "email"
      ],
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "last_auth": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "silent": {
          "type": "boolean"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "teams": {
          "items": {
            "type": "string",
            "format": "objectid"
          },
          "type": "array"
        },
        "token": {
          "readOnly": true,
          "type": "string"
        },
        "_id": {
          "$ref": "#/definitions/User__id"
        },
        "user_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Oplog": {
      "type": "object",
      "properties": {
        "c": {

        },
        "i": {

        },
        "ip": {

        },
        "o": {

        },
        "r": {

        },
        "_id": {
          "type": "string",
          "format": "objectid"
        }
      }
    },
    "Genomic": {
      "required": [
        "WILDTYPE",
        "CLINICAL_ID",
        "SAMPLE_ID"
      ],
      "type": "object",
      "properties": {
        "TRANSCRIPT_SOURCE": {
          "type": "string"
        },
        "BESTEFFECT_TRANSCRIPT_EXON": {
          "type": "integer"
        },
        "TRUE_ENTREZ_ID": {
          "type": "string"
        },
        "TRUE_VARIANT_CLASSIFICATION": {
          "type": "string"
        },
        "MMR_STATUS": {
          "enum": [
            "Cannot assess",
            "Indeterminate (see note)",
            "Proficient (MMR-P / MSS)",
            "Deficient (MMR-D / MSI-H)"
          ],
          "type": "string"
        },
        "APOBEC_STATUS": {
          "enum": [
            "Yes",
            "No",
            "Cannot assess",
            "insufficient variants"
          ],
          "type": "string"
        },
        "COPY_COUNT": {
          "type": "integer"
        },
        "TABACCO_STATUS": {
          "enum": [
            "Yes",
            "No",
            "Cannot assess",
            "insufficient variants"
          ],
          "type": "string"
        },
        "TRUE_CDNA_CHANGE": {
          "type": "string"
        },
        "TRUE_PROTEIN_CHANGE": {
          "type": "string"
        },
        "GENETIC_EVENT": {
          "enum": [
            "Arm level",
            "Chromosomal level"
          ],
          "type": "string"
        },
        "VARIANT_CATEGORY": {
          "enum": [
            "MUTATION",
            "CNV",
            "SV",
            "SIGNATURE"
          ],
          "type": "string"
        },
        "BESTEFFECT_VARIANT_CLASSIFICATION": {
          "type": "string"
        },
        "TIER": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ALLELE_FRACTION": {
          "type": "number",
          "format": "float"
        },
        "CANONICAL_STRAND": {
          "type": "string"
        },
        "BEST": {
          "type": "boolean"
        },
        "CNV_ROW_ID": {
          "type": "integer"
        },
        "CANONICAL_CDNA_TRANSCRIPT_ID": {
          "type": "string"
        },
        "SOMATIC_STATUS": {
          "type": "string"
        },
        "CNV_BAND": {
          "type": "string"
        },
        "ALTERNATE_ALLELE": {
          "type": "string"
        },
        "CHROMOSOME": {
          "type": "string"
        },
        "POSITION": {
          "type": "integer"
        },
        "CNV_HUGO_SYMBOL": {
          "type": "string"
        },
        "WILDTYPE": {
          "enum": [
            true,
            false
          ],
          "type": "boolean"
        },
        "ACTIONABILITY": {
          "enum": [
            "actionable",
            "investigational"
          ],
          "type": "string"
        },
        "CANONICAL_VARIANT_CLASSIFICATION": {
          "type": "string"
        },
        "CLINICAL_ID": {
          "$ref": "#/definitions/Clinical__id"
        },
        "CANONICAL_TRANSCRIPT_EXON": {
          "type": "integer"
        },
        "BESTEFFECT_HUGO_SYMBOL": {
          "type": "string"
        },
        "REFERENCE_ALLELE": {
          "type": "string"
        },
        "COVERAGE": {
          "type": "integer"
        },
        "BESTEFFECT_CDNA_CHANGE": {
          "type": "string"
        },
        "TRUE_STRAND": {
          "type": "string"
        },
        "TRUE_CDNA_TRANSCRIPT_ID": {
          "type": "string"
        },
        "TEMOZOLOMIDE_STATUS": {
          "enum": [
            "Yes",
            "No",
            "Cannot assess",
            "insufficient variants"
          ],
          "type": "string"
        },
        "TRUE_HUGO_SYMBOL": {
          "type": "string"
        },
        "CNV_CALL": {
          "type": "string"
        },
        "CYTOBAND": {
          "type": "string"
        },
        "STRUCTURAL_VARIANT_COMMENT": {
          "type": "string"
        },
        "SAMPLE_ID": {
          "type": "string"
        },
        "BESTEFFECT_ENTREZ_ID": {
          "type": "string"
        },
        "CANONICAL_CDNA_CHANGE": {
          "type": "string"
        },
        "UVA_STATUS": {
          "enum": [
            "Yes",
            "No",
            "Cannot assess",
            "insufficient variants"
          ],
          "type": "string"
        },
        "POLE_STATUS": {
          "enum": [
            "Yes",
            "No",
            "Cannot assess",
            "insufficient variants"
          ],
          "type": "string"
        },
        "REFERENCE_GENOME": {
          "type": "string"
        },
        "BESTEFFECT_PROTEIN_CHANGE": {
          "type": "string"
        },
        "TRUE_TRANSCRIPT_EXON": {
          "type": "integer"
        },
        "CANONICAL_PROTEIN_CHANGE": {
          "type": "string"
        },
        "CANONICAL_ENTREZ_ID": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "CANONICAL_HUGO_SYMBOL": {
          "type": "string"
        },
        "BESTEFFECT_CDNA_TRANSCRIPT_ID": {
          "type": "string"
        }
      }
    },
    "Gikb": {
      "required": [
        "name",
        "mrn",
        "sample_id"
      ],
      "type": "object",
      "properties": {
        "gi_report_date": {
          "type": "string"
        },
        "trial_matches": {

        },
        "name": {
          "type": "string"
        },
        "prelim_report_generated": {
          "type": "boolean"
        },
        "mrn": {
          "type": "string"
        },
        "sample_id": {
          "type": "string"
        },
        "final_report_generated": {
          "type": "boolean"
        },
        "provider_name": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "provider_npi": {
          "type": "integer"
        }
      }
    },
    "Hipaa": {
      "type": "object",
      "properties": {
        "phi": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user_id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "patient_id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        }
      }
    },
    "Response": {
      "required": [
        "status",
        "match_status",
        "expiry_date",
        "allow_update",
        "response_text",
        "clinical_trial_id",
        "ip_address",
        "time_clicked",
        "return_url",
        "response_recorded"
      ],
      "type": "object",
      "properties": {
        "notification_id": {
          "$ref": "#/definitions/User__id"
        },
        "status": {
          "type": "string"
        },
        "clinical_trial_id": {
          "type": "string"
        },
        "match_id": {
          "$ref": "#/definitions/Match__id"
        },
        "match_status": {
          "type": "string"
        },
        "time_clicked": {
          "type": "string",
          "format": "date-time"
        },
        "deferred_contact": {
          "required": [
            "name",
            "email"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "expiry_date": {
          "type": "string",
          "format": "date-time"
        },
        "allow_update": {
          "type": "boolean"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        },
        "ip_address": {
          "type": "string"
        },
        "response_text": {
          "type": "string"
        },
        "return_url": {
          "type": "string"
        },
        "response_recorded": {
          "type": "string"
        }
      }
    },
    "Match": {
      "required": [
        "TEAM_ID",
        "USER_ID"
      ],
      "type": "object",
      "properties": {
        "MATCH_STATUS": {
          "type": "integer"
        },
        "VARIANT_CATEGORY": {
          "type": "string"
        },
        "TRUE_HUGO_SYMBOL": {
          "type": "string"
        },
        "EMAIL_BODY": {
          "type": "string"
        },
        "TEAM_ID": {
          "type": "string",
          "format": "objectid"
        },
        "FILTER_STATUS": {
          "type": "integer"
        },
        "FILTER_NAME": {
          "type": "string"
        },
        "TIER": {
          "type": "integer"
        },
        "VARIANTS": {
          "items": {
            "type": "string",
            "format": "objectid"
          },
          "type": "array"
        },
        "ONCOTREE_PRIMARY_DIAGNOSIS_NAME": {
          "type": "string"
        },
        "ENROLLED": {
          "type": "boolean"
        },
        "CLINICAL_ID": {
          "$ref": "#/definitions/Clinical__id"
        },
        "REPORT_DATE": {
          "type": "string",
          "format": "date-time"
        },
        "data_push_id": {
          "type": "string"
        },
        "PATIENT_MRN": {
          "type": "string"
        },
        "EMAIL_ADDRESS": {
          "type": "string"
        },
        "USER_ID": {
          "type": "string",
          "format": "objectid"
        },
        "MMID": {
          "type": "string"
        },
        "ONCOTREE_BIOPSY_SITE_TYPE": {
          "type": "string"
        },
        "FILTER_ID": {
          "$ref": "#/definitions/Filter__id"
        },
        "EMAIL_SUBJECT": {
          "type": "string"
        },
        "_id": {
          "$ref": "#/definitions/Match__id"
        }
      }
    },
    "Public_stat": {
      "type": "object",
      "properties": {
        "num_patients": {
          "type": "integer"
        },
        "num_clinical_trials": {
          "type": "integer"
        },
        "_id": {
          "type": "string",
          "format": "objectid"
        }
      }
    },
    "Clinical__id": {
      "type": "string",
      "format": "objectid"
    },
    "User__id": {
      "type": "string",
      "format": "objectid"
    },
    "Filter__id": {
      "type": "string",
      "format": "objectid"
    },
    "Match__id": {
      "type": "string",
      "format": "objectid"
    }
  },
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ]
}
